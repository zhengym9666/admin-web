<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.admin.dao.DepartmentDAO">
<!--type指定的是对应的实体类  -->
    <resultMap id="BaseResultMap" type="com.admin.bean.Department" >
    <!-- id用来配置表的主键与类的属性的映射关系，column指定的是表的字段名，property指定的是类的属性名 -->
	<id column="id" property="id"></id>
  <!-- result用来配置普通字段与类的属性的映射关系，column指定表的字段名，property指定类的属性名 -->
	<result column="NAME" property="name"/>
	<result column="intro" property="intro"/>
	<result column="minister" property="minister"/>
	<result column="minister_name" property="minister_name"/>
	<result column="vice1_minister" property="vice1_minister"/>
	<result column="vice1_name" property="vice1_name"/>
	<result column="vice2_minister" property="vice2_minister"/>
	<result column="vice2_name" property="vice2_name"/>
	<result column="collegeId" property="collegeId"/>
	<result column="clubId" property="clubId"/>
	<result column="birthDate" property="birthDate"/>
	</resultMap>
	<resultMap id="ManDepatmentMap" type="com.admin.bean.ManDepatment" >
		<result column="departmentId" property="departmentId"/>
		<result column="femaleSum" property="femaleSum"/>
	</resultMap>
	<resultMap id="FemaleDepatementMap" type="com.admin.bean.FemaleDepatement" >
		<result column="departmentId" property="departmentId"/>
		<result column="manSum" property="manSum"/>
	</resultMap>
	<resultMap id="ManFemalClubMap" type="com.admin.bean.ManFemalClub" >
		<result column="manSum" property="manSum"/>
		<result column="famale" property="famale"/>
		<result column="clubId" property="clubId"/>
	</resultMap>

    <select id="queryDepartmentById" resultMap="BaseResultMap" parameterType="String" >
        select *
        from DEPARTMENT
        where id = #{departmentId}
    </select>
	
	<select id="queryManSum" resultMap="ManDepatmentMap" parameterType="String">
		SELECT COUNT(*) manSum,gr.departmentId FROM groupmember gr,student st
		WHERE gr.clubId= #{clubId} AND gr.stuNum=st.stuNum
		AND st.gender=1
		GROUP BY gr.departmentId;
	</select>
	<select id="queryFeMaleSum" resultMap="FemaleDepatementMap" parameterType="String">
		SELECT COUNT(*) femaleSum,gr.departmentId FROM groupmember gr,student st
		WHERE gr.clubId=#{clubId} AND gr.stuNum=st.stuNum
		AND st.gender!=1
		GROUP BY gr.departmentId
	</select>
	<select id="queryDepartmentIds" resultType="String" parameterType="String">
		SELECT  gr.departmentId FROM groupmember gr
		WHERE gr.clubId=#{clubId}
		GROUP BY  gr.departmentId;
	</select>
	<select id="queryPersonByDepSum" resultType="java.util.HashMap" parameterType="String">
		SELECT  gr.departmentId,COUNT(*) sum FROM groupmember gr
		WHERE  gr.clubId=#{clubId}
		GROUP BY  gr.departmentId;
	</select>
	<select id="queryDepartmentNameById" resultType="String" parameterType="String">
		SELECT dep.name FROM department dep WHERE dep.id=#{id};
	</select>
	<select id="queryManFemaleByClubSum" resultMap="ManFemalClubMap" parameterType="String">
		SELECT man.manSum,female.femaleSum,man.clubId FROM
		(SELECT COUNT(*)manSum,gr.clubId FROM groupmember gr,student st
		WHERE gr.clubId=#{clubId}
		AND gr.stuNum=st.stuNum
		AND st.gender=1) man ,
		(SELECT COUNT(*)femaleSum FROM groupmember gr,student st
		WHERE gr.clubId=#{clubId}
		AND gr.stuNum=st.stuNum
		AND st.gender!=1) female;
	</select>
	<select id="queryDepartmentByClubId" resultMap="BaseResultMap" parameterType="String">
		select * from DEPARTMENT where clubId = #{clubId}
	</select>

	<select id="queryDepartmentPage" resultMap="BaseResultMap" parameterType="HashMap">
		select * from DEPARTMENT
		<where>
			<if test="keyword1!='' and keyword1!=null">and NAME like '%${keyword1}%'</if>
			and clubId = #{clubId}
		</where>
		limit #{start},#{rows}
	</select>

	<select id="queryDepartmentPageCount" parameterType="HashMap" resultType="java.lang.Integer">
		select count(*) from DEPARTMENT
		<where>
			<if test="keyword1!='' and keyword1!=null">and NAME like '%${keyword1}%'</if>
			and clubId = #{clubId}
		</where>
	</select>

	<insert id="addDepartInfo" parameterType="HashMap">
		INSERT INTO DEPARTMENT(id,NAME,intro,collegeId,clubId,birthDate) VALUES
		(
		(SELECT CONCAT((SELECT MAX(t2.id)+1 FROM department t2 WHERE t2.id LIKE '${preClubId}%'),'')),#{departName},#{intro},#{collegeId},#{clubId},#{birthDate}
		)
	</insert>

	<update id="updateDepartInfo" parameterType="HashMap">
		update DEPARTMENT set NAME = #{departName},intro = #{intro} where id = #{departId}
	</update>

	<delete id="deleteDepartInfo" parameterType="String">
		delete from DEPARTMENT where id = #{departId}
	</delete>
</mapper>